// Generated by CoffeeScript 1.6.2
/*
extentiont OPTIONS
*/

/*wrap dom utility with selector engine
*/

var cgt, get, getOption, getPrefix, hasGetUserMedia, onFailSoHard, page_saveOptions, popupInit, popupUserMediaSuccess, setOption, updateStatus;

bonzo.setQueryEngine(qwery);

cgt = function(selector) {
  return bonzo(qwery(selector));
};

get = function(selector) {
  return qwery(selector);
};

getPrefix = function() {
  return "cgt_";
};

setOption = function(key, value) {
  return localStorage[getPrefix() + key] = value;
};

getOption = function(key, value) {
  return localStorage[getPrefix() + key];
};

updateStatus = function(message) {
  return cgt('#message_box').html('<p>' + message + '</p>');
};

hasGetUserMedia = function() {
  return navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
};

onFailSoHard = function(e) {
  return console.log('Reeeejected!', e);
};

page_saveOptions = function(evt) {
  console.log('page_saveOptions');
  cgt('input, textarea, select').each(function(e, i) {
    console.log(cgt(e).attr('id'), cgt(e).val());
    return setOption(cgt(e).attr('id'), cgt(e).val());
  });
  return updateStatus('Options successfully saved');
};

popupUserMediaSuccess = function(localMediaStream) {
  var video;

  video = document.querySelector('video');
  video.src = window.URL.createObjectURL(localMediaStream);
  return video.onloadedmetadata = function(e) {
    return console.log('// Ready to go. Do some stuff.');
  };
};

popupInit = function(evt) {
  var vendorUserMedia;

  vendorUserMedia = hasGetUserMedia();
  console.log("popupInit. media?=", vendorUserMedia);
  if (vendorUserMedia) {
    navigator.webkitGetUserMedia({
      video: true,
      audio: false
    }, popupUserMediaSuccess, onFailSoHard);
    return true;
  }
};

/*DOMContentLoaded
*/


domReady(popupInit);
